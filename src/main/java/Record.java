/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main.java;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Joshua Formento
 */
public class Record extends javax.swing.JFrame {

    /**
     * Creates new form Record
     */
    public Record() {
        initComponents();
        setTitle("Borrower History");
        setLocationRelativeTo(null);
        setVisible(true); 
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }                                       

        private void showcontent(){
        try {
    Connection conn = Myconnection.getConnection();
    Statement st = conn.createStatement();
    String query = "SELECT ID, EQUIPMENT, BORROWER, SRCODE, DATE, `BR/RT` FROM borrowhistory"; // Include ID in the query
    ResultSet rs = st.executeQuery(query);

    DefaultTableModel model = (DefaultTableModel) tableHistory.getModel();
    model.setRowCount(0); // Clear existing rows before adding new data

    String[] colNames = {"EQUIPMENT", "BORROWER", "SRCODE", "DATE", "BR/RT"}; // Don't include "ID" in column names
    model.setColumnIdentifiers(colNames);
    TableColumnModel columnModel = tableHistory.getColumnModel();
    columnModel.getColumn(0).setPreferredWidth(100);
    columnModel.getColumn(2).setPreferredWidth(20);
    columnModel.getColumn(4).setPreferredWidth(20);

    while (rs.next()) {
      int idValue = rs.getInt(1); // Retrieve ID (assuming it's an integer)
      String EQUIPMENT = rs.getString(2);
      String BORROWER = rs.getString(3);
      String SRCODE = rs.getString(4);
      String DATE = rs.getString(5);
      String BR = rs.getString(6);
      String[] row = {EQUIPMENT, BORROWER, SRCODE, DATE, BR}; // Don't include "idValue" in the row
      model.addRow(row);
    }

  } catch (SQLException ex) {
    ex.printStackTrace();
  }

    }                                      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableHistory = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        showBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("BookmanOldStyleProCyrW04-Rg", 0, 32)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("BATANGAS STATE UNIVERSITY");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, 50));

        jLabel11.setFont(new java.awt.Font("BookmanOldStyleProCyrW04-Rg", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("The National Engineering University");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Couture", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("BORROWER HISTORY");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, -1, 38));

        jLabel2.setFont(new java.awt.Font("Couture", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Laboratory Equipment");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, -1, 38));

        tableHistory.setFont(new java.awt.Font("Proxima Nova Rg", 0, 12)); // NOI18N
        tableHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EQUIPMENT", "BORROWER", "SRCODE", "DATE", "BR/RT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableHistory.getTableHeader().setReorderingAllowed(false);
        tableHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHistoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableHistory);
        if (tableHistory.getColumnModel().getColumnCount() > 0) {
            tableHistory.getColumnModel().getColumn(0).setResizable(false);
            tableHistory.getColumnModel().getColumn(0).setPreferredWidth(100);
            tableHistory.getColumnModel().getColumn(1).setResizable(false);
            tableHistory.getColumnModel().getColumn(2).setResizable(false);
            tableHistory.getColumnModel().getColumn(2).setPreferredWidth(20);
            tableHistory.getColumnModel().getColumn(3).setResizable(false);
            tableHistory.getColumnModel().getColumn(4).setResizable(false);
            tableHistory.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 620, 190));

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setFont(new java.awt.Font("Quarion", 1, 16)); // NOI18N
        backBtn.setForeground(new java.awt.Color(0, 0, 0));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 380, -1, -1));

        showBtn.setBackground(new java.awt.Color(255, 255, 255));
        showBtn.setFont(new java.awt.Font("Quarion", 1, 16)); // NOI18N
        showBtn.setForeground(new java.awt.Color(0, 0, 0));
        showBtn.setText("Show");
        showBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBtnActionPerformed(evt);
            }
        });
        getContentPane().add(showBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 380, -1, -1));

        deleteBtn.setBackground(new java.awt.Color(255, 255, 255));
        deleteBtn.setFont(new java.awt.Font("Quarion", 1, 16)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(0, 0, 0));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 380, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/java/images/Artboard 1.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTableForDate(String selectedDate) {
    try {
        Connection conn = Myconnection.getConnection();
        String query = "SELECT ID, EQUIPMENT, BORROWER, SRCODE, DATE, `BR/RT` FROM borrowhistory";
        PreparedStatement ps = conn.prepareStatement(query);
        ResultSet rs = ps.executeQuery();

        DefaultTableModel model = (DefaultTableModel) tableHistory.getModel();
        model.setRowCount(0); // Clear existing rows before adding new data

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        while (rs.next()) {
            String dbDateStr = rs.getString("DATE");
            Date dbDate = null;
            try {
                dbDate = sdf.parse(dbDateStr);
            } catch (ParseException ex) {
                Logger.getLogger(Record.class.getName()).log(Level.SEVERE, null, ex);
            }
            String selectedDateStr = selectedDate + " 00:00:00"; // Append time to match database format
            Date selected = sdf.parse(selectedDateStr);

            // Compare dates without considering time
            if (dbDate.getDate() == selected.getDate() &&
                dbDate.getMonth() == selected.getMonth() &&
                dbDate.getYear() == selected.getYear()) {
                String EQUIPMENT = rs.getString(2);
                String BORROWER = rs.getString(3);
                String SRCODE = rs.getString(4);
                String DATE = rs.getString(5);
                String BR = rs.getString(6);
                String[] row = {EQUIPMENT, BORROWER, SRCODE, DATE, BR};
                model.addRow(row);
            }
        }

    } catch (SQLException | ParseException ex) {
        ex.printStackTrace();
    }
}
    
    private void tableHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHistoryMouseClicked

        if (evt.getClickCount() == 2) {
        // Double-click event: Sort the table by 
        int row = tableHistory.getSelectedRow();
            if (row >= 0) {
                 String selectedDate = tableHistory.getValueAt(row, 3).toString();
                    refreshTableForDate(selectedDate);

            }
    } else if (evt.getClickCount() == 1) {
        // Single-click event: Select the row without sorting
        int row = tableHistory.getSelectedRow();
        if (row >= 0) {
            tableHistory.setRowSelectionInterval(row, row);
        }
    }
      // TODO add your handling code here:
    }//GEN-LAST:event_tableHistoryMouseClicked

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        main.java.adminWindow admin = new main.java.adminWindow();
        admin.setLayout(null);
        admin.setBounds(200,200,1000,600);
        admin.setVisible(true);
        admin.setLocationRelativeTo(null);
        admin.setTitle("Admin"); 
        this.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try {
        int selectedRow = tableHistory.getSelectedRow();
        if (selectedRow >= 0) { // Check if a row is selected
            // Retrieve the ID directly from the database
            String query = "SELECT ID FROM borrowhistory"; // Modify the query to select only the ID column
            Connection conn = Myconnection.getConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);

            // Move the cursor to the selected row
            for (int i = 0; i <= selectedRow; i++) {
                rs.next();
            }

            // Retrieve the ID from the ResultSet
            String idValue = rs.getString("ID");

            // Delete the record using the retrieved ID
            query = "DELETE FROM borrowhistory WHERE `ID` = ?";
            PreparedStatement ps = Myconnection.getConnection().prepareStatement(query);
            ps.setString(1, idValue);
            ps.executeUpdate();

            DefaultTableModel model = (DefaultTableModel) tableHistory.getModel();
            model.setRowCount(0); // Clear existing rows before refreshing
            showcontent(); // Call showcontent() to refresh the table

            JOptionPane.showMessageDialog(null, "Deleted successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete!");
        }
    } catch (Exception exception) {
        exception.printStackTrace();
    }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void showBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBtnActionPerformed
            try {
    showcontent(); // Calls the method to retrieve and display data
  } catch (Exception ex) {
    ex.printStackTrace();
  } 
            // TODO add your handling code here:
    }//GEN-LAST:event_showBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Record().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton showBtn;
    private javax.swing.JTable tableHistory;
    // End of variables declaration//GEN-END:variables
}
